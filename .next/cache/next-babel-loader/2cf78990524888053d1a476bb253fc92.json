{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport { useMemo, useReducer } from 'react';\n/**\n *\n * @param {Function} reducer reducer function\n * @param {Object} reducerObject object that contains actions handlers\n * @param {*} initialState initial reducer state\n * @param {Function} init allows lazy initialization of state\n * @returns {[*, Object]} array with state and action creators handlers object\n * @example\n * const reducerObject = {\n *  increment: (state, { payload }) => state + payload,\n *  decrement: (state, { payload }) => state - payload\n * }\n *\n * const reducer = createReducer(undefined, reducerObject)\n *\n * function Component() {\n *  const [count, actions] = useBindedActionsReducer(reducer, reducerObject, 1)\n *\n *  //...Later\n *  function handleButtonClick() {\n *    actions.increment(2) // state will be updated to \"3\"\n *  }\n *\n *  return <button onClick={handleButtonClick} />\n * }\n */\n\nexport default function useBindedActionsReducer(reducer, reducerObject, initialState, init) {\n  var _useReducer = useReducer(reducer, initialState, init),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var bindedActionCreators = useMemo(function () {\n    return _Object$keys(reducerObject).reduce(function (acc, actionCreatorName) {\n      acc[actionCreatorName] = function (payload) {\n        return dispatch({\n          type: actionCreatorName,\n          payload: payload\n        });\n      };\n\n      return acc;\n    }, {});\n  }, [dispatch, reducerObject]);\n  return [state, bindedActionCreators];\n}","map":{"version":3,"sources":["D:\\Tiago\\Projects\\health-management-app\\utils\\hooks\\useBindedActionsReducer.js"],"names":["useMemo","useReducer","useBindedActionsReducer","reducer","reducerObject","initialState","init","state","dispatch","bindedActionCreators","reduce","acc","actionCreatorName","payload","type"],"mappings":";;AAAA,SAASA,OAAT,EAAkBC,UAAlB,QAAoC,OAApC;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,eAAe,SAASC,uBAAT,CACbC,OADa,EAEbC,aAFa,EAGbC,YAHa,EAIbC,IAJa,EAKb;AAAA,oBAC0BL,UAAU,CAACE,OAAD,EAAUE,YAAV,EAAwBC,IAAxB,CADpC;AAAA;AAAA,MACOC,KADP;AAAA,MACcC,QADd;;AAGA,MAAMC,oBAAoB,GAAGT,OAAO,CAClC;AAAA,WACE,aAAYI,aAAZ,EAA2BM,MAA3B,CAAkC,UAACC,GAAD,EAAMC,iBAAN,EAA4B;AAC5DD,MAAAA,GAAG,CAACC,iBAAD,CAAH,GAAyB,UAAAC,OAAO;AAAA,eAC9BL,QAAQ,CAAC;AAAEM,UAAAA,IAAI,EAAEF,iBAAR;AAA2BC,UAAAA,OAAO,EAAPA;AAA3B,SAAD,CADsB;AAAA,OAAhC;;AAEA,aAAOF,GAAP;AACD,KAJD,EAIG,EAJH,CADF;AAAA,GADkC,EAOlC,CAACH,QAAD,EAAWJ,aAAX,CAPkC,CAApC;AAUA,SAAO,CAACG,KAAD,EAAQE,oBAAR,CAAP;AACD","sourcesContent":["import { useMemo, useReducer } from 'react'\n/**\n *\n * @param {Function} reducer reducer function\n * @param {Object} reducerObject object that contains actions handlers\n * @param {*} initialState initial reducer state\n * @param {Function} init allows lazy initialization of state\n * @returns {[*, Object]} array with state and action creators handlers object\n * @example\n * const reducerObject = {\n *  increment: (state, { payload }) => state + payload,\n *  decrement: (state, { payload }) => state - payload\n * }\n *\n * const reducer = createReducer(undefined, reducerObject)\n *\n * function Component() {\n *  const [count, actions] = useBindedActionsReducer(reducer, reducerObject, 1)\n *\n *  //...Later\n *  function handleButtonClick() {\n *    actions.increment(2) // state will be updated to \"3\"\n *  }\n *\n *  return <button onClick={handleButtonClick} />\n * }\n */\nexport default function useBindedActionsReducer(\n  reducer,\n  reducerObject,\n  initialState,\n  init,\n) {\n  const [state, dispatch] = useReducer(reducer, initialState, init)\n\n  const bindedActionCreators = useMemo(\n    () =>\n      Object.keys(reducerObject).reduce((acc, actionCreatorName) => {\n        acc[actionCreatorName] = payload =>\n          dispatch({ type: actionCreatorName, payload })\n        return acc\n      }, {}),\n    [dispatch, reducerObject],\n  )\n\n  return [state, bindedActionCreators]\n}\n"]},"metadata":{},"sourceType":"module"}