{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Tiago\\\\Projects\\\\health-management-app\\\\components\\\\PatientDetails\\\\index.js\";\nimport React from 'react';\nimport { uniqueId } from 'lodash';\nimport { Button } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport { ActionPanel, Container, Content } from './styled';\nimport { useBindedActionsReducer } from '../../utils/hooks';\nimport { createComponentReducer } from '../../utils/redux';\nimport ServiceSection from '../ServiceSection';\nimport FocusList from './FocusList';\n\nfunction focusGenerator() {\n  return {\n    id: uniqueId('focus'),\n    // Would be replaced by a real ID after creating it in the server\n    relevantData: '',\n    diagnosis: '',\n    interventions: ''\n  };\n}\n\nvar initialState = {\n  focuses: [focusGenerator()]\n};\nvar reducerObject = {\n  addFocus: function addFocus(draft) {\n    draft.focuses.push(focusGenerator());\n  },\n  deleteFocus: function deleteFocus(draft, _ref) {\n    var focusId = _ref.payload;\n    var focusIndex = draft.focuses.findIndex(function (focus) {\n      return focus.id === focusId;\n    });\n    draft.focuses.splice(focusIndex, 1);\n  }\n};\nvar reducer = createComponentReducer(reducerObject);\nexport default function PatientDetails() {\n  var _useBindedActionsRedu = useBindedActionsReducer(reducer, reducerObject, initialState),\n      _useBindedActionsRedu2 = _slicedToArray(_useBindedActionsRedu, 2),\n      state = _useBindedActionsRedu2[0],\n      actions = _useBindedActionsRedu2[1];\n\n  function handleDeleteButtonClick(focusId) {\n    actions.deleteFocus(focusId);\n  }\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(ServiceSection, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(ActionPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: actions.addFocus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), \"Adicionar Foco\")), React.createElement(FocusList, {\n    focuses: state.focuses,\n    handleDeleteButtonClick: handleDeleteButtonClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["D:\\Tiago\\Projects\\health-management-app\\components\\PatientDetails\\index.js"],"names":["React","uniqueId","Button","AddIcon","ActionPanel","Container","Content","useBindedActionsReducer","createComponentReducer","ServiceSection","FocusList","focusGenerator","id","relevantData","diagnosis","interventions","initialState","focuses","reducerObject","addFocus","draft","push","deleteFocus","focusId","payload","focusIndex","findIndex","focus","splice","reducer","PatientDetails","state","actions","handleDeleteButtonClick"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,OAAjC,QAAgD,UAAhD;AACA,SAASC,uBAAT,QAAwC,mBAAxC;AACA,SAASC,sBAAT,QAAuC,mBAAvC;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,SAASC,cAAT,GAA0B;AACxB,SAAO;AACLC,IAAAA,EAAE,EAAEX,QAAQ,CAAC,OAAD,CADP;AACkB;AACvBY,IAAAA,YAAY,EAAE,EAFT;AAGLC,IAAAA,SAAS,EAAE,EAHN;AAILC,IAAAA,aAAa,EAAE;AAJV,GAAP;AAMD;;AAED,IAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,CAACN,cAAc,EAAf;AADU,CAArB;AAIA,IAAMO,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAE,kBAAAC,KAAK,EAAI;AACjBA,IAAAA,KAAK,CAACH,OAAN,CAAcI,IAAd,CAAmBV,cAAc,EAAjC;AACD,GAHmB;AAIpBW,EAAAA,WAAW,EAAE,qBAACF,KAAD,QAAiC;AAAA,QAAdG,OAAc,QAAvBC,OAAuB;AAC5C,QAAMC,UAAU,GAAGL,KAAK,CAACH,OAAN,CAAcS,SAAd,CAAwB,UAAAC,KAAK;AAAA,aAAIA,KAAK,CAACf,EAAN,KAAaW,OAAjB;AAAA,KAA7B,CAAnB;AACAH,IAAAA,KAAK,CAACH,OAAN,CAAcW,MAAd,CAAqBH,UAArB,EAAiC,CAAjC;AACD;AAPmB,CAAtB;AAUA,IAAMI,OAAO,GAAGrB,sBAAsB,CAACU,aAAD,CAAtC;AAEA,eAAe,SAASY,cAAT,GAA0B;AAAA,8BACdvB,uBAAuB,CAC9CsB,OAD8C,EAE9CX,aAF8C,EAG9CF,YAH8C,CADT;AAAA;AAAA,MAChCe,KADgC;AAAA,MACzBC,OADyB;;AAOvC,WAASC,uBAAT,CAAiCV,OAAjC,EAA0C;AACxCS,IAAAA,OAAO,CAACV,WAAR,CAAoBC,OAApB;AACD;;AAED,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,OAAO,EAAES,OAAO,CAACb,QAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,mBADF,CAFF,EAYE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAEY,KAAK,CAACd,OADjB;AAEE,IAAA,uBAAuB,EAAEgB,uBAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF,CADF;AAqBD","sourcesContent":["import React from 'react'\nimport { uniqueId } from 'lodash'\nimport { Button } from '@material-ui/core'\nimport AddIcon from '@material-ui/icons/Add'\nimport { ActionPanel, Container, Content } from './styled'\nimport { useBindedActionsReducer } from '../../utils/hooks'\nimport { createComponentReducer } from '../../utils/redux'\nimport ServiceSection from '../ServiceSection'\nimport FocusList from './FocusList'\n\nfunction focusGenerator() {\n  return {\n    id: uniqueId('focus'), // Would be replaced by a real ID after creating it in the server\n    relevantData: '',\n    diagnosis: '',\n    interventions: '',\n  }\n}\n\nconst initialState = {\n  focuses: [focusGenerator()],\n}\n\nconst reducerObject = {\n  addFocus: draft => {\n    draft.focuses.push(focusGenerator())\n  },\n  deleteFocus: (draft, { payload: focusId }) => {\n    const focusIndex = draft.focuses.findIndex(focus => focus.id === focusId)\n    draft.focuses.splice(focusIndex, 1)\n  },\n}\n\nconst reducer = createComponentReducer(reducerObject)\n\nexport default function PatientDetails() {\n  const [state, actions] = useBindedActionsReducer(\n    reducer,\n    reducerObject,\n    initialState,\n  )\n\n  function handleDeleteButtonClick(focusId) {\n    actions.deleteFocus(focusId)\n  }\n\n  return (\n    <Container>\n      <Content>\n        <ServiceSection />\n        <ActionPanel>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={actions.addFocus}\n          >\n            <AddIcon />\n            Adicionar Foco\n          </Button>\n        </ActionPanel>\n        <FocusList\n          focuses={state.focuses}\n          handleDeleteButtonClick={handleDeleteButtonClick}\n        />\n      </Content>\n    </Container>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}